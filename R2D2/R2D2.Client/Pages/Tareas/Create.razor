@page "/tareas/create"
@rendermode InteractiveAuto

<PageTitle>Nueva Tarea</PageTitle>

<h1>
    <i class="bi bi-list-task"></i>
    Nueva Tarea
</h1>
<hr />

<EditForm method="post" Model="Tarea" OnValidSubmit="AddTarea" FormName="create" Enhance>

    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="descripcion" class="form-label">Descripcion</label>
        <InputText id="descripcion" @bind-Value="Tarea.Descripcion" class="form-control" />
        <ValidationMessage For="() => Tarea.Descripcion" class="text-danger" />
    </div>


    <div class="mb-3">
        <label for="hombreClave" class="form-label">Hombre Clave</label>
        <InputText id="hombreClave" @bind-Value="Tarea.HombreClave" class="form-control" />
        <ValidationMessage For="() => Tarea.HombreClave" class="text-danger" />
    </div>


    <div class="mb-3">
        <label for="telefono" class="form-label">Teléfono</label>
        <InputText id="telefono" @bind-Value="Tarea.Telefono" class="form-control mask-phone"/>
        <ValidationMessage For="() => Tarea.Telefono" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="inicio" class="form-label">Início</label>
        <InputDate id="inicio" @bind-Value="Tarea.Inicio" class="form-control" />
        <ValidationMessage For="() => Tarea.Inicio" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="fim" class="form-label">Fim</label>
        <InputDate id="fim" @bind-Value="Tarea.Fim" class="form-control" />
        <ValidationMessage For="() => Tarea.Fim" class="text-danger" />
    </div>

    <div class="d-flex justify-content-end">

        <a href="/tareas" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i>
            Volver
        </a>

        <button type="submit" class="btn btn-primary ms-2">
            <i class="bi bi-check-circle"></i>
            Guardar Tarea
        </button>
    </div>

</EditForm>

@code {

    [SupplyParameterFromForm]
    public Tarea Tarea { get; set; } = new();

    public async Task AddTarea()
    {
        await _tareasService.AddAsync(Tarea);
        _navigation.NavigateTo("/tareas");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _js.InvokeVoidAsync("masks");
        }
    }

}
